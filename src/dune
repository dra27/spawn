(library
 (name spawn)
 (public_name spawn)
 (foreign_stubs
  (language c)
  (names spawn_stubs)
  (flags (:standard (:include flags.sexp))))
 ;; We don't use the thread library directly, however we use pthread
 ;; functions in the stubs, so declare a dependency on thread.
 ;;
 ;; If that was a problem, we could add -lpthread to
 ;; c_library_flags. However, this would require testing that it is
 ;; supported.
 (libraries unix threads))

(rule
  (with-stdout-to flags.sexp
    (run ocaml %{dep:flags.ml})))

(rule
  (with-stdout-to flags.ml
    (echo "print_endline @@ if Sys.win32 then \"(-DUNICODE -D_UNICODE)\" else \"()\"")))
